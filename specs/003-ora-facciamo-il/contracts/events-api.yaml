openapi: 3.0.3
info:
  title: ShareHub Events API
  description: API for event management with hierarchical content (Event → Session → Speech → Slide)
  version: 1.0.0
  contact:
    name: ShareHub Development Team

servers:
  - url: http://localhost:3001/api
    description: Local development
  - url: https://api.sharehub.app/api
    description: Production

components:
  securitySchemes:
    AdminAuth:
      type: apiKey
      in: header
      name: X-Admin-Token
      description: Admin authentication token
    TokenAuth:
      type: apiKey
      in: query
      name: token
      description: Event access token (organizer or participant)

  schemas:
    Event:
      type: object
      required:
        - id
        - tenant_id
        - slug
        - name
        - date
        - visibility
        - status
        - retention_policy
        - created_at
      properties:
        id:
          type: string
          format: uuid
        tenant_id:
          type: string
          format: uuid
        slug:
          type: string
          pattern: '^[a-z0-9-]+$'
          maxLength: 100
        name:
          type: string
          maxLength: 200
        date:
          type: string
          format: date
        description:
          type: string
          nullable: true
        visibility:
          type: string
          enum: [public, private]
        status:
          type: string
          enum: [upcoming, past, archived]
        token_expiration_date:
          type: string
          format: date-time
          nullable: true
        retention_policy:
          type: string
          enum: [keep_forever, archive_1year, delete_2years]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreateEventRequest:
      type: object
      required:
        - name
        - date
        - visibility
      properties:
        name:
          type: string
          maxLength: 200
        date:
          type: string
          format: date
        description:
          type: string
        visibility:
          type: string
          enum: [public, private]
        token_expiration_date:
          type: string
          format: date-time
          description: Required for private events
        retention_policy:
          type: string
          enum: [keep_forever, archive_1year, delete_2years]
          default: keep_forever

    CreateEventResponse:
      type: object
      required:
        - event
      properties:
        event:
          $ref: '#/components/schemas/Event'
        tokens:
          type: object
          nullable: true
          description: Only present for private events
          properties:
            organizer:
              type: string
              example: 'abc123xyz789def456ghi'
            participant:
              type: string
              example: 'xyz789abc123ghi456def'

    Session:
      type: object
      required:
        - id
        - event_id
        - title
        - display_order
        - created_at
      properties:
        id:
          type: string
          format: uuid
        event_id:
          type: string
          format: uuid
        title:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        start_time:
          type: string
          format: date-time
          nullable: true
        display_order:
          type: integer
          minimum: 0
        created_at:
          type: string
          format: date-time
        speeches:
          type: array
          items:
            $ref: '#/components/schemas/Speech'

    Speech:
      type: object
      required:
        - id
        - session_id
        - title
        - display_order
        - created_at
      properties:
        id:
          type: string
          format: uuid
        session_id:
          type: string
          format: uuid
        title:
          type: string
          maxLength: 150
        speaker_name:
          type: string
          nullable: true
        duration:
          type: integer
          nullable: true
          minimum: 1
          maximum: 600
        description:
          type: string
          nullable: true
        display_order:
          type: integer
          minimum: 0
        created_at:
          type: string
          format: date-time
        slides:
          type: array
          items:
            $ref: '#/components/schemas/Slide'

    Slide:
      type: object
      required:
        - id
        - speech_id
        - filename
        - file_size
        - mime_type
        - display_order
        - uploaded_at
      properties:
        id:
          type: string
          format: uuid
        speech_id:
          type: string
          format: uuid
        filename:
          type: string
          maxLength: 255
        storage_path:
          type: string
        file_size:
          type: integer
          minimum: 1
          maximum: 104857600
        mime_type:
          type: string
          enum: [application/pdf, application/vnd.ms-powerpoint, application/vnd.openxmlformats-officedocument.presentationml.presentation, application/vnd.oasis.opendocument.presentation]
        display_order:
          type: integer
          minimum: 0
        uploaded_by:
          type: string
        uploaded_at:
          type: string
          format: date-time
        download_url:
          type: string
          nullable: true

    EventMetrics:
      type: object
      required:
        - page_views
        - total_slide_downloads
      properties:
        page_views:
          type: integer
        total_slide_downloads:
          type: integer
        unique_visitors:
          type: object
          nullable: true
          description: Premium tier only
        per_slide_downloads:
          type: object
          nullable: true
          description: Premium tier only
        per_speech_downloads:
          type: object
          nullable: true
          description: Premium tier only
        geographic_data:
          type: object
          nullable: true
          description: Premium tier only
        device_types:
          type: object
          nullable: true
          description: Premium tier only
        access_timeline:
          type: array
          nullable: true
          description: Premium tier only

    ActivityLog:
      type: object
      required:
        - id
        - timestamp
        - actor_type
        - action_type
      properties:
        id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        actor_type:
          type: string
          enum: [organizer, participant, anonymous, admin]
        action_type:
          type: string
          enum: [upload, download, view, edit, delete]
        filename:
          type: string
          nullable: true
        file_size:
          type: integer
          nullable: true
        session_title:
          type: string
          nullable: true
        speech_title:
          type: string
          nullable: true

    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
        details:
          type: object
          nullable: true

paths:
  /events:
    post:
      summary: Create new event
      description: Admin creates a new event (public or private with token generation)
      tags: [Events]
      security:
        - AdminAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventRequest'
      responses:
        '201':
          description: Event created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEventResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '422':
          description: Business logic error (e.g., token expiration in past)

    get:
      summary: List events
      description: Admin lists all events for their tenant
      tags: [Events]
      security:
        - AdminAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [upcoming, past, archived]
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: List of events
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      limit:
                        type: integer
                      total:
                        type: integer
        '401':
          description: Unauthorized

  /events/{eventId}:
    get:
      summary: Get event details
      description: Get event with all sessions, speeches, and slides
      tags: [Events]
      security:
        - AdminAuth: []
        - TokenAuth: []
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Event details
          content:
            application/json:
              schema:
                type: object
                properties:
                  event:
                    $ref: '#/components/schemas/Event'
                  sessions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Session'
        '404':
          description: Event not found
        '403':
          description: Token invalid or expired

    put:
      summary: Update event
      description: Admin or organizer updates event details (requires double confirmation for past events)
      tags: [Events]
      security:
        - AdminAuth: []
        - TokenAuth: []
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Confirm-Past-Event
          in: header
          schema:
            type: boolean
          description: Required when updating past events
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                date:
                  type: string
                  format: date
                description:
                  type: string
      responses:
        '200':
          description: Event updated
        '400':
          description: Validation error
        '403':
          description: Confirmation required for past event
        '404':
          description: Event not found

    delete:
      summary: Delete event
      description: Admin permanently deletes event and all associated data
      tags: [Events]
      security:
        - AdminAuth: []
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Event deleted
        '404':
          description: Event not found
        '401':
          description: Unauthorized

  /events/{eventId}/tokens/pdf:
    get:
      summary: Download tokens as PDF
      description: Generate PDF with both tokens and QR codes
      tags: [Events]
      security:
        - AdminAuth: []
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: PDF file
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '404':
          description: Event not found or not private
        '401':
          description: Unauthorized

  /events/{eventId}/sessions:
    post:
      summary: Create session
      description: Organizer creates a new session within event
      tags: [Sessions]
      security:
        - TokenAuth: []
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
              properties:
                title:
                  type: string
                description:
                  type: string
                start_time:
                  type: string
                  format: date-time
                display_order:
                  type: integer
      responses:
        '201':
          description: Session created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '403':
          description: Requires organizer token
        '404':
          description: Event not found

  /sessions/{sessionId}:
    put:
      summary: Update session
      description: Organizer updates session details
      tags: [Sessions]
      security:
        - TokenAuth: []
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                start_time:
                  type: string
                  format: date-time
                display_order:
                  type: integer
      responses:
        '200':
          description: Session updated
        '403':
          description: Requires organizer token
        '404':
          description: Session not found

    delete:
      summary: Delete session
      description: Organizer deletes session (cascades to speeches and slides)
      tags: [Sessions]
      security:
        - TokenAuth: []
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Session deleted
        '403':
          description: Requires organizer token
        '404':
          description: Session not found

  /sessions/{sessionId}/speeches:
    post:
      summary: Create speech
      description: Organizer creates a new speech within session
      tags: [Speeches]
      security:
        - TokenAuth: []
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
              properties:
                title:
                  type: string
                speaker_name:
                  type: string
                duration:
                  type: integer
                description:
                  type: string
                display_order:
                  type: integer
      responses:
        '201':
          description: Speech created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Speech'
        '403':
          description: Requires organizer token

  /speeches/{speechId}/slides:
    post:
      summary: Upload slide
      description: Organizer uploads slide file to speech
      tags: [Slides]
      security:
        - TokenAuth: []
      parameters:
        - name: speechId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                display_order:
                  type: integer
      responses:
        '201':
          description: Slide uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slide'
        '400':
          description: Invalid file type or size
        '403':
          description: Requires organizer token

  /slides/{slideId}/download:
    get:
      summary: Download slide
      description: Download individual slide file (tracks in activity log)
      tags: [Slides]
      security:
        - TokenAuth: []
      parameters:
        - name: slideId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Signed URL for download
          content:
            application/json:
              schema:
                type: object
                properties:
                  download_url:
                    type: string
                  expires_at:
                    type: string
                    format: date-time
        '404':
          description: Slide not found
        '429':
          description: Rate limit exceeded
          headers:
            Retry-After:
              schema:
                type: integer

  /events/{eventId}/slides/download-all:
    get:
      summary: Download all slides as ZIP
      description: Generate ZIP archive with hierarchical folder structure
      tags: [Slides]
      security:
        - TokenAuth: []
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ZIP file stream
          content:
            application/zip:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              schema:
                type: string
                example: 'attachment; filename="event-name-slides-2025-10-07.zip"'
        '404':
          description: Event not found
        '429':
          description: Rate limit exceeded

  /events/{eventId}/dashboard:
    get:
      summary: Get organizer dashboard data
      description: Retrieve metrics, activity log, and content tree for organizer
      tags: [Dashboard]
      security:
        - TokenAuth: []
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Dashboard data
          content:
            application/json:
              schema:
                type: object
                properties:
                  event:
                    $ref: '#/components/schemas/Event'
                  sessions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Session'
                  metrics:
                    $ref: '#/components/schemas/EventMetrics'
                  activity_log:
                    type: array
                    items:
                      $ref: '#/components/schemas/ActivityLog'
                  tenant_plan:
                    type: string
                    enum: [free, premium]
        '403':
          description: Requires organizer token
        '404':
          description: Event not found

  /events/{eventId}/public:
    get:
      summary: Get public event page data
      description: Public or token-authenticated access to event details
      tags: [Public]
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: token
          in: query
          schema:
            type: string
          description: Optional token for private events
      responses:
        '200':
          description: Public event data
          content:
            application/json:
              schema:
                type: object
                properties:
                  event:
                    $ref: '#/components/schemas/Event'
                  sessions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Session'
        '403':
          description: Private event requires valid token
        '404':
          description: Event not found
        '429':
          description: Rate limit exceeded

tags:
  - name: Events
    description: Event management endpoints
  - name: Sessions
    description: Session management within events
  - name: Speeches
    description: Speech management within sessions
  - name: Slides
    description: Slide file management
  - name: Dashboard
    description: Organizer dashboard
  - name: Public
    description: Public event pages
